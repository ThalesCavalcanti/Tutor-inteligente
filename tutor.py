import streamlit as st
import google.generativeai as genai
from dotenv import load_dotenv
import os

# Carrega a chave da API do arquivo .env
load_dotenv()
genai.configure(api_key=os.getenv("GEMINI_API_KEY"))

# Inicializa o modelo
model = genai.GenerativeModel("gemini-pro")

# Lista de mat√©rias dispon√≠veis
subjects = [
    "Matem√°tica", "F√≠sica", "Qu√≠mica", "Hist√≥ria",
    "Geografia", "Biologia", "Portugu√™s", "Ingl√™s"
]

st.set_page_config(page_title="Tutor Inteligente", page_icon="üìö")
st.title("Tutor Inteligente com IA")
st.write("Seu assistente de estudos com explica√ß√µes, resumos e quizzes!")

# Sele√ß√£o de mat√©ria
subject = st.selectbox("Escolha uma mat√©ria:", subjects)

# Tipo de atividade
task = st.radio("O que voc√™ deseja?", ["Explica√ß√£o", "Resumo", "Gerar Quiz"])

# Entrada de conte√∫do
prompt = st.text_area("Digite sua d√∫vida, t√≥pico ou conte√∫do:", height=150)

# Bot√£o para gerar
if st.button("üîç Obter Resposta"):
    with st.spinner("Consultando a IA..."):
        try:
            if task == "Explica√ß√£o":
                user_input = f"Explique detalhadamente sobre {prompt}, na mat√©ria de {subject}."
            elif task == "Resumo":
                user_input = f"Resuma o seguinte conte√∫do de {subject}: {prompt}"
            elif task == "Gerar Quiz":
                user_input = f"Crie 5 quest√µes de m√∫ltipla escolha com respostas corretas sobre: {prompt} (mat√©ria: {subject})."

            response = model.generate_content(user_input)
            st.markdown("###  Resposta da IA:")
            st.write(response.text)

        except Exception as e:
            st.error(" Erro ao gerar resposta. Verifique sua conex√£o ou chave da API.")
            st.exception(e)

st.markdown("---")
st.caption("Desenvolvido com Streamlit + Gemini")
